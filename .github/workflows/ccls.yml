name: ccls

on:
  schedule:
  - cron: '0 18 * * *'
  #push:
  #  branches: [ master, test ]
  workflow_dispatch:

env:
  llvm_ver: 12.0.1

jobs:
  linux:
    runs-on: ubuntu-18.04
    steps:
      - name: Download llvm
        run: |
          wget -qOllvm.tar.xz "https://github.com/llvm/llvm-project/releases/download/llvmorg-${llvm_ver}/clang+llvm-${llvm_ver}-x86_64-linux-gnu-ubuntu-16.04.tar.xz"
          tar xJf llvm.tar.xz
          pwd && ls
          mv clang* llvm
      - name: Build ccls
        run: |
          cat /proc/cpuinfo | grep processor
          git clone --depth=1 --recursive https://github.com/MaskRay/ccls
          cd ccls
          cmake -H. -BRelease -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=../llvm -DCMAKE_CXX_FLAGS="-static-libgcc -static-libstdc++"
          cmake --build Release
          mv Release/ccls .
          7z -mx9 a ../ccls_linux_amd64.zip ./ccls
      - uses: actions/upload-artifact@v2
        with:
          name: ccls
          path: ./ccls_linux_amd64.zip
          retention-days: 1

  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    steps:
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64
      - name: Download llvm
        run: |
          cd /d c:\
          curl -L -ollvm.7z https://github.com/fcying/llvm-msvc-prebuild/releases/download/v${{ env.llvm_ver }}/llvm_msvc.7z
          7z x llvm.7z
          dir
      - name: Build ccls
        run: |
          git clone --depth=1 --recursive https://github.com/MaskRay/ccls
          cd ccls
          cmake -H. -BRelease -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=clang-cl -DCMAKE_PREFIX_PATH="c:/llvm/Release"
          ninja -C Release

          mkdir ccls
          copy Release\ccls.exe .\ccls\
          copy c:\Windows\System32\vcruntime140_1.dll .\ccls\
          copy c:\Windows\System32\vcruntime140.dll .\ccls\
          copy c:\Windows\System32\msvcp140.dll .\ccls\

          7z -mx9 a ..\ccls_windows_amd64.zip ccls
      - uses: actions/upload-artifact@v2
        with:
          name: ccls
          path: ./ccls_windows_amd64.zip
          retention-days: 1

  publish:
    needs: [linux, windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
      - name: Download data
        run: ls -la

      - uses: dev-drprasad/delete-tag-and-release@v0.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          delete_release: true
          tag_name: ccls

      - uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ccls
          artifactErrorsFailBuild: true
          allowUpdates: true
          replacesArtifacts: true
          removeArtifacts: true
          artifacts: "./ccls/*"
          body: |
            build with llvm ${{ env.llvm_ver }}
            #### Requirement
            Linux: os >= ubuntu 14.04 &ensp;&ensp; glibc >= 2.17
