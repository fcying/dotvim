# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

if [ -f "$HOME/.bashrc.local" ]; then
    source $HOME/.bashrc.local
fi

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]:BASH\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w:BASH\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'

    alias grep='grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

alias ll='ls -alh'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# android builder
function jack_server() {
    if [ "$1" == "restart" ]; then
        ./out/host/linux-x86/bin/jack-admin kill-server && ./out/host/linux-x86/bin/jack-admin start-server
    else
        export JACK_SERVER_VM_ARGUMENTS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx$1"
        ./out/host/linux-x86/bin/jack-admin kill-server && ./out/host/linux-x86/bin/jack-admin start-server
    fi
}

#export JACK_SERVER_VM_ARGUMENTS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4g"
export LC_ALL=C
export USE_CCACHE=1


# pyenv
#export PYENV_ROOT="$HOME/.pyenv"

# tmux
if [ ! -d "$HOME/.tmux/tmux-resurrect" ]; then
    mkdir -p $HOME/.tmux
    git clone https://github.com/fcying/tmux-resurrect $HOME/.tmux/tmux-resurrect --depth=1
fi

# fzf
[ ! -d ~/.fzf ] && {
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    ~/.fzf/install <<EOF
    y
EOF
}
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# z.lua
[ ! -f $HOME/bin/z.lua ] && {
    mkdir -p ~/bin
    pushd ~/bin && curl -LO https://raw.githubusercontent.com/skywind3000/z.lua/master/z.lua && popd
}
export _ZL_FZF_FLAG="-e"
eval "$(lua $HOME/bin/z.lua --init bash once enhanced)"
alias zz='z -i'
alias zc='z -c'
alias zf='z -I'
alias zb='z -b'
alias zh='z -I -t .'
alias zzc='zz -c'
function z_dirstack(){
    if [ -z "$*" ]; then
        _zlua --
    else
        _zlua -"$@"
    fi
}
alias d=' z_dirstack'

export GOPATH=$HOME/go
PATH=$HOME/bin:$HOME/.local/bin:$HOME/tool/go/bin:$HOME/.cargo/bin:$PATH

# linuxbrew
BREW_PREFIX=""
if [ -d "$HOME/.linuxbrew/bin" ]; then
    BREW_PREFIX=$HOME/.linuxbrew
elif [ -d "/home/linuxbrew/.linuxbrew/bin" ]; then
    BREW_PREFIX=/home/linuxbrew/.linuxbrew
fi
if [ ! -z "$BREW_PREFIX" ]; then
    alias brew=$BREW_PREFIX/bin/brew
    MANPATH="$BREW_PREFIX/share/man:$MANPATH"
    INFOPATH="$BREW_PREFIX/share/info:$INFOPATH"
fi

type LoadAfter >/dev/null 2>&1 && LoadAfter
