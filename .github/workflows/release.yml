name: release

on:
  schedule:
  - cron: '0 19 * * *'
  push:
    branches: [ master, test ]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  release:
    runs-on: ubuntu-18.04
    steps:
      - name: Install neovim
        run: |
          wget -o/dev/null -Onvim.tgz "https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.tar.gz"
          tar xzf nvim.tgz
          sudo cp -rf ./nvim-linux64/* /usr/local
          nvim --version

      - uses: actions/checkout@v2
      - name: Prepare nvim config
        run: |
          pwd && ls
          mkdir -p ~/.config/nvim

          # init default nvim config
          cp -r nvim_config/init.vim lua/ *.vim ~/.config/nvim
          cp -r snippets vendor  ~/.config/nvim/
          pushd ~/.config
          nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'
          7z -mx9 a nvim_config.zip ./nvim

          # install vendor
          #nvim --headless -c 'LspInstall --sync clangd' -c 'q'
          nvim --headless -c 'LspInstall --sync ccls' -c 'q'

          # get rg
          new_ver=$(curl -s "https://github.com/BurntSushi/ripgrep/releases/latest" | grep -Po "(\d+\.){2}\d+")
          filename=ripgrep-${new_ver}-x86_64-unknown-linux-musl
          wget -qOrg.tgz "https://github.com/BurntSushi/ripgrep/releases/download/$new_ver/$filename.tar.gz"
          tar xzf rg.tgz
          chmod a+x ./$filename/rg
          mv ./$filename/rg ~/.config/nvim/vendor/
          rm -r rg.tgz $filename

          7z -mx9 a nvim_config_with_vendor.zip ./nvim
          popd
          mv ~/.config/*.zip .

      - name: Publish release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          {
            echo "nvim_config work with [NeoVim](https://github.com/neovim/neovim/releases/latest)"
            echo -e "\n"
            echo "### vendor"
            echo "[ripgrep](https://github.com/BurntSushi/ripgrep)"
            echo "[ccls](https://github.com/MaskRay/ccls)"
          } | tee /tmp/note.md
          gh release delete nvim_config -y || true
          git push origin :nvim_config || true
          gh release create nvim_config -t "nvim_config" -F "/tmp/note.md" --target $GITHUB_SHA *.zip
